// Code generated by protoc-gen-go. DO NOT EDIT.
// source: docker-host.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DockerHost struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ColorCode            string   `protobuf:"bytes,3,opt,name=colorCode,proto3" json:"colorCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerHost) Reset()         { *m = DockerHost{} }
func (m *DockerHost) String() string { return proto.CompactTextString(m) }
func (*DockerHost) ProtoMessage()    {}
func (*DockerHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_1358bea4b2532a29, []int{0}
}

func (m *DockerHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerHost.Unmarshal(m, b)
}
func (m *DockerHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerHost.Marshal(b, m, deterministic)
}
func (m *DockerHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerHost.Merge(m, src)
}
func (m *DockerHost) XXX_Size() int {
	return xxx_messageInfo_DockerHost.Size(m)
}
func (m *DockerHost) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerHost.DiscardUnknown(m)
}

var xxx_messageInfo_DockerHost proto.InternalMessageInfo

func (m *DockerHost) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DockerHost) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DockerHost) GetColorCode() string {
	if m != nil {
		return m.ColorCode
	}
	return ""
}

type GetContainersCountRequest struct {
	Hosts                []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainersCountRequest) Reset()         { *m = GetContainersCountRequest{} }
func (m *GetContainersCountRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainersCountRequest) ProtoMessage()    {}
func (*GetContainersCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1358bea4b2532a29, []int{1}
}

func (m *GetContainersCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersCountRequest.Unmarshal(m, b)
}
func (m *GetContainersCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersCountRequest.Marshal(b, m, deterministic)
}
func (m *GetContainersCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersCountRequest.Merge(m, src)
}
func (m *GetContainersCountRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainersCountRequest.Size(m)
}
func (m *GetContainersCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersCountRequest proto.InternalMessageInfo

func (m *GetContainersCountRequest) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type GetContainersCountResponse struct {
	HostContainers       []*GetContainersCountResponse_HostContainerMapField `protobuf:"bytes,1,rep,name=hostContainers,proto3" json:"hostContainers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *GetContainersCountResponse) Reset()         { *m = GetContainersCountResponse{} }
func (m *GetContainersCountResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainersCountResponse) ProtoMessage()    {}
func (*GetContainersCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1358bea4b2532a29, []int{2}
}

func (m *GetContainersCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersCountResponse.Unmarshal(m, b)
}
func (m *GetContainersCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersCountResponse.Marshal(b, m, deterministic)
}
func (m *GetContainersCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersCountResponse.Merge(m, src)
}
func (m *GetContainersCountResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainersCountResponse.Size(m)
}
func (m *GetContainersCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersCountResponse proto.InternalMessageInfo

func (m *GetContainersCountResponse) GetHostContainers() []*GetContainersCountResponse_HostContainerMapField {
	if m != nil {
		return m.HostContainers
	}
	return nil
}

type GetContainersCountResponse_HostContainerMapField struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainersCountResponse_HostContainerMapField) Reset() {
	*m = GetContainersCountResponse_HostContainerMapField{}
}
func (m *GetContainersCountResponse_HostContainerMapField) String() string {
	return proto.CompactTextString(m)
}
func (*GetContainersCountResponse_HostContainerMapField) ProtoMessage() {}
func (*GetContainersCountResponse_HostContainerMapField) Descriptor() ([]byte, []int) {
	return fileDescriptor_1358bea4b2532a29, []int{2, 0}
}

func (m *GetContainersCountResponse_HostContainerMapField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersCountResponse_HostContainerMapField.Unmarshal(m, b)
}
func (m *GetContainersCountResponse_HostContainerMapField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersCountResponse_HostContainerMapField.Marshal(b, m, deterministic)
}
func (m *GetContainersCountResponse_HostContainerMapField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersCountResponse_HostContainerMapField.Merge(m, src)
}
func (m *GetContainersCountResponse_HostContainerMapField) XXX_Size() int {
	return xxx_messageInfo_GetContainersCountResponse_HostContainerMapField.Size(m)
}
func (m *GetContainersCountResponse_HostContainerMapField) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersCountResponse_HostContainerMapField.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersCountResponse_HostContainerMapField proto.InternalMessageInfo

func (m *GetContainersCountResponse_HostContainerMapField) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GetContainersCountResponse_HostContainerMapField) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*DockerHost)(nil), "DockerHost")
	proto.RegisterType((*GetContainersCountRequest)(nil), "GetContainersCountRequest")
	proto.RegisterType((*GetContainersCountResponse)(nil), "GetContainersCountResponse")
	proto.RegisterType((*GetContainersCountResponse_HostContainerMapField)(nil), "GetContainersCountResponse.HostContainerMapField")
}

func init() { proto.RegisterFile("docker-host.proto", fileDescriptor_1358bea4b2532a29) }

var fileDescriptor_1358bea4b2532a29 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x25, 0x69, 0x2b, 0x64, 0x84, 0x42, 0x07, 0x85, 0x18, 0x3d, 0x94, 0x9c, 0x7a, 0x31, 0xd0,
	0xfa, 0x05, 0x1a, 0xd1, 0x5e, 0xea, 0x61, 0x3d, 0xe9, 0x2d, 0xd9, 0x0c, 0xb8, 0x58, 0x77, 0xd6,
	0xdd, 0xad, 0x1f, 0xe7, 0xd7, 0xc9, 0x6e, 0x85, 0x88, 0x36, 0xde, 0x66, 0xde, 0xbc, 0xb7, 0x33,
	0xef, 0x2d, 0xcc, 0x3a, 0x96, 0xaf, 0x64, 0x2f, 0x5f, 0xd8, 0xf9, 0xca, 0x58, 0xf6, 0x5c, 0x3e,
	0x00, 0xdc, 0x46, 0x70, 0xcd, 0xce, 0xe3, 0x14, 0x52, 0x65, 0xf2, 0x64, 0x9e, 0x2c, 0x32, 0x91,
	0x2a, 0x83, 0x08, 0x63, 0xdd, 0xbc, 0x51, 0x9e, 0x46, 0x24, 0xd6, 0x78, 0x01, 0x99, 0xe4, 0x2d,
	0xdb, 0x9a, 0x3b, 0xca, 0x47, 0x71, 0xd0, 0x03, 0xe5, 0x12, 0xce, 0xee, 0xc9, 0xd7, 0xac, 0x7d,
	0xa3, 0x34, 0x59, 0x57, 0xf3, 0x4e, 0x7b, 0x41, 0xef, 0x3b, 0x72, 0x1e, 0x4f, 0x60, 0x12, 0x56,
	0xbb, 0x3c, 0x99, 0x8f, 0x16, 0x99, 0xd8, 0x37, 0xe5, 0x67, 0x02, 0xc5, 0x21, 0x8d, 0x33, 0xac,
	0x1d, 0xe1, 0x13, 0x4c, 0x03, 0xaf, 0x1f, 0x47, 0xf5, 0xf1, 0x6a, 0x59, 0x0d, 0x8b, 0xaa, 0xf5,
	0x4f, 0xc5, 0xa6, 0x31, 0x77, 0x8a, 0xb6, 0x9d, 0xf8, 0xf5, 0x50, 0x71, 0x0d, 0xa7, 0x07, 0x89,
	0xc1, 0x77, 0xa0, 0x7e, 0x27, 0x11, 0xeb, 0x70, 0xbc, 0x0c, 0x3b, 0x62, 0x18, 0x13, 0xb1, 0x6f,
	0x56, 0x2d, 0xcc, 0xfa, 0xfc, 0x1e, 0xc9, 0x7e, 0x28, 0x49, 0xb8, 0x01, 0xfc, 0x7b, 0x1b, 0x16,
	0xd5, 0x60, 0x32, 0xc5, 0xf9, 0x3f, 0x66, 0x6e, 0xc6, 0xcf, 0xa9, 0x69, 0xdb, 0xa3, 0xf8, 0x61,
	0x57, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x25, 0xf0, 0xed, 0x86, 0xc5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DockerHostServiceClient is the client API for DockerHostService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DockerHostServiceClient interface {
	GetContainersCount(ctx context.Context, in *GetContainersCountRequest, opts ...grpc.CallOption) (*GetContainersCountResponse, error)
}

type dockerHostServiceClient struct {
	cc *grpc.ClientConn
}

func NewDockerHostServiceClient(cc *grpc.ClientConn) DockerHostServiceClient {
	return &dockerHostServiceClient{cc}
}

func (c *dockerHostServiceClient) GetContainersCount(ctx context.Context, in *GetContainersCountRequest, opts ...grpc.CallOption) (*GetContainersCountResponse, error) {
	out := new(GetContainersCountResponse)
	err := c.cc.Invoke(ctx, "/DockerHostService/GetContainersCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DockerHostServiceServer is the server API for DockerHostService service.
type DockerHostServiceServer interface {
	GetContainersCount(context.Context, *GetContainersCountRequest) (*GetContainersCountResponse, error)
}

// UnimplementedDockerHostServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDockerHostServiceServer struct {
}

func (*UnimplementedDockerHostServiceServer) GetContainersCount(ctx context.Context, req *GetContainersCountRequest) (*GetContainersCountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainersCount not implemented")
}

func RegisterDockerHostServiceServer(s *grpc.Server, srv DockerHostServiceServer) {
	s.RegisterService(&_DockerHostService_serviceDesc, srv)
}

func _DockerHostService_GetContainersCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainersCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DockerHostServiceServer).GetContainersCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DockerHostService/GetContainersCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DockerHostServiceServer).GetContainersCount(ctx, req.(*GetContainersCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DockerHostService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DockerHostService",
	HandlerType: (*DockerHostServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetContainersCount",
			Handler:    _DockerHostService_GetContainersCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "docker-host.proto",
}
